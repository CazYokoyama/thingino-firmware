#!/bin/sh

plugin="ftp"

. /sbin/common

show_help() {
	echo "Usage: $0 [-s host] [-p port] [-u username] [-P password] [-d path] [-f file] [-v] [-h]
  -s host     FTP server FQDN or IP address.
  -p port     FTP server port.
  -d path     Directory on server, relative to FTP root.
  -f file     File to upload.
  -u username FTP username.
  -P password FTP password.
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

verbosity="--silent"
# override config values with command line arguments
while getopts d:f:p:P:s:u:vVh flag; do
	case "$flag" in
		d) ftp_path=$OPTARG ;;
		f) ftp_file=$OPTARG ;;
		p) ftp_port=$OPTARG ;;
		P) ftp_password=$OPTARG ;;
		s) ftp_host=$OPTARG ;;
		u) ftp_user=$OPTARG ;;
		v) verbosity="--verbose" ;;
		V) ftp_sendvideo="true" ;;
		h | *) show_help ;;
	esac
done

# validate mandatory values
[ -z "$ftp_host" ] && die "FTP host not found"

# assign default values if not set
[ -z "$ftp_port" ] && ftp_port=21
[ -z "$ftp_user" ] && ftp_user="anonymous" && ftp_password="anonymous"

if [ -z "$ftp_file" ]; then
	if [ "true" = "$ftp_sendvideo" ]; then
		attachment="/tmp/vbuffer.mov"
		ftp_filename=$(date +"$ftp_template").mov
	else
		attachment=$(mktemp -u /tmp/snapshot-XXXXXX).jpg
		clone_snapshot $attachment
		ftp_filename=$(date +"$ftp_template").jpg
	fi

	ftp_file=$attachment
fi

url="ftp://"
[ -n "$ftp_user" ] && [ -n "$ftp_password" ] && url="$url$ftp_user:$ftp_password"
url="$url@$ftp_host:$ftp_port"
[ -n "$ftp_path" ] && url="$url/${ftp_path// /%20}"
url="$url/$ftp_filename"

command="$CURL $verbosity --url $url --upload-file $ftp_file --ftp-create-dirs"

sh -c "$command" || die "Failed to upload file to FTP server"

[ "true" = "$delete_tempfile" ] && [ -f "$attachment" ] && rm "$attachment"

quit_clean 0
