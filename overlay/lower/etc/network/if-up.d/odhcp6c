#!/bin/sh

PIDFILE="/var/run/odhcp6c_$IFACE.pid"
TIMEOUT=10

. /usr/share/common

if [ ! -d "/sys/class/net/$IFACE" ]; then
	echo "$IFACE not found"
	exit 0
fi

if [ "$(sysctl -n net.ipv6.conf.all.disable_ipv6)" -eq 1 ]; then
	echo "$IFACE: IPv6 disabled globally"
	exit 0
fi

if [ "true" = "$IF_DHCP_V6_ENABLED" ]; then
	echo "$IFACE: DHCPv6 enabled"
else
	echo "$IFACE: DHCPv6 disabled"
	exit 0
fi

# Check for DHCPv6 presence before starting
check_dhcpv6_presence() {
	echo "$IFACE: Testing for DHCPv6 presence"
	# Ping DHCPv6 multicast address with timeout
	ping6 -c 1 -W 2 ff02::1:2%$IFACE > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo "$IFACE: No DHCPv6 server detected"
		return 1
	else
		echo "$IFACE: DHCPv6 infrastructure detected"
		return 0
	fi
}

start_post_up() {
	# First check if DHCPv6 is available
	check_dhcpv6_presence
	if [ $? -ne 0 ]; then
		echo "$IFACE: Skipping DHCPv6 client startup due to no server"
		return 0
	fi

	echo "$IFACE: starting odhcp6c"

	TMP_LOG="/tmp/odhcp6c.log"

	/sbin/odhcp6c -p "$PIDFILE" -t120 -S15 "$IFACE" > "$TMP_LOG" 2>&1 &

	while [ "$TIMEOUT" -gt 0 ]; do
		if [ -f "$TMP_LOG" ] && grep -q "Adding address" "$TMP_LOG"; then
			echo "$IFACE: DHCPv6 configured"
			rm -f "$TMP_LOG"
			return 0
		fi
		sleep 1
		TIMEOUT=$((TIMEOUT - 1))
	done

	echo "$IFACE: DHCPv6 timeout reached"
	rm -f "$TMP_LOG"
	return 1
}

stop_pre_down() {
	echo "$IFACE: stopping odhcp6c"

	if [ -f "$PIDFILE" ]; then
		pid=$(cat $PIDFILE)
		echo "Running service PID: $pid"

		echo "kill -9 $pid"
		kill -9 $pid

		echo "rm -f $PIDFILE"
		rm -f "$PIDFILE"
	else
		echo "Nothing to stop"
	fi
}

case "$MODE" in
	start)
		case "$PHASE" in
			post-up)
				start_post_up
				;;
		esac
		;;

	stop)
		case "$PHASE" in
			pre-down)
				stop_pre_down
				;;
		esac
		;;

	*)
		echo "Usage: $0 {start|stop}"
		exit 1
		;;
esac

exit 0
